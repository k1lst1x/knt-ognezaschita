"""
Django settings for knt project.
Generated by 'django-admin startproject' using Django 5.2.
"""

import os
import logging
from pathlib import Path
from logging.handlers import RotatingFileHandler

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR указывает на папку, где лежит manage.py.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-brx3_esvewr)v)76fl-w1yi_5fxeubp_lf8zc(2(h76*acz@3)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False  # В продакшене обязательно False, иначе утечка данных

if DEBUG:
    ALLOWED_HOSTS = ["*"]
else:
    ALLOWED_HOSTS = [
        "knt-ognezaschita.kz",
        "www.knt-ognezaschita.kz",
    ]

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:8000",
    "http://127.0.0.1:8000",
    "https://knt-ognezaschita.kz",
]


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',  # наше приложение
    'django.contrib.sitemaps',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'knt.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Путь к папке templates (на уровне manage.py)
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                # Позволяет использовать user, messages, request и т.д. в шаблонах
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.categories_and_products',
            ],
        },
    },
]

WSGI_APPLICATION = 'knt.wsgi.application'


# Database
# Ставим SQLite по умолчанию, можно переключиться на PostgreSQL при необходимости
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'knt_ognezaschita_kz',
#         'USER': 'knt_ognezaschita_user',
#         'PASSWORD': 's8SVVhh3640B',
#         'HOST': '185.22.67.9',
#         'PORT': '5432',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'knt_ognezaschita_kz',
        'USER': 'knt_ognezaschita_user',
        'PASSWORD': 's8SVVhh3640B',
        'HOST': '185.22.67.9' if DEBUG else '127.0.0.1',
        'PORT': '5432',
    }
}


# Настройки логов
LOG_DIR = os.path.join(BASE_DIR, 'django_logs')
os.makedirs(LOG_DIR, exist_ok=True)

# 30 MB на файл, 3 бэкапа - 4 итог
MAX_LOG_SIZE = 30 * 1024 * 1024
LOG_BACKUPS = 2

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'formatters': {
        'verbose': {
            'format': '%(asctime)s [%(levelname)s] %(name)s %(pathname)s:%(lineno)d\n%(message)s'
        },
        'simple': {
            'format': '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
        },
        'django_simple': {
            'format': '[%(levelname)s] %(name)s %(message)s'
        },
        'sql_formatter': {
            'format': '%(asctime)s [SQL] %(message)s'
        },
    },
    'handlers': {
        # Файл ошибок (только WARNING и выше)
        'error_file': {
            'level': 'WARNING',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOG_DIR, 'errors.log'),
            'formatter': 'verbose',
            'maxBytes': MAX_LOG_SIZE,
            'backupCount': LOG_BACKUPS,
            'encoding': 'utf-8',
        },
        # Основной файловый лог (INFO и выше)
        'info_file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOG_DIR, 'info.log'),
            'formatter': 'simple',
            'maxBytes': MAX_LOG_SIZE,
            'backupCount': LOG_BACKUPS,
            'encoding': 'utf-8',
        },
        # Консоль для Django (только INFO+)
        'django_console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'django_simple',
        },
        # Консоль для debug (только в DEBUG режиме)
        'debug_console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'filters': ['require_debug_true'],
        },
    },
    'loggers': {
        # Логгер Django по умолчанию
        'django': {
            'handlers': ['info_file', 'error_file', 'django_console'],
            'level': 'INFO',
            'propagate': False,
        },
        # Логи сервера разработки
        'django.server': {
            'handlers': ['django_console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
    'root': {
        'handlers': ['info_file', 'error_file', 'debug_console'],
        'level': 'DEBUG',
    },
}


# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Интернационализация
LANGUAGE_CODE = 'ru-ru'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True  # в Django 5.2 может отсутствовать по умолчанию, добавьте если нужно
USE_TZ = True

# Статические файлы (CSS, JavaScript, Images)
# STATIC_URL - префикс, по которому статика будет доступна в браузере
STATIC_URL = 'static/'
# Указываем, где лежат файлы для dev-режима (css, js, images)
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
STATIC_ROOT = BASE_DIR / 'staticfiles'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# (Опционально) Медиа-файлы, если нужно загружать изображения/файлы от пользователей
# MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR / 'media'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

JAZZMIN_SETTINGS = {
    "site_title": "KnT-Ognezaschita | Admin",
    "site_header": "KnT Огнезащита",
    "site_brand": "KnT-Ognezaschita",
    "site_logo": "images/knt-favicon/favicon-96x96.png",  # путь к иконке в static
    "site_icon": "images/knt-favicon/favicon-96x96.png",
    "welcome_sign": "Добро пожаловать в панель управления KnT",
    "copyright": "KnT-Ognezaschita",

    # Поиск по пользователям и продуктам (если хочешь, добавь "core.Product")
    "search_model": ["auth.User", "core.Product"],

    # Top Menu
    "topmenu_links": [
        {"name": "Сайт", "url": "/", "new_window": True},
        {"model": "core.Product"},
        {"model": "core.Category"},
        {"app": "core"},
        {"name": "Google Search Console", "url": "https://search.google.com/search-console/about", "new_window": True},
    ],

    # User Menu (иконка справа)
    "usermenu_links": [
        {"name": "На сайт", "url": "/", "new_window": True},
    ],

    "show_sidebar": True,
    "navigation_expanded": True,
    "hide_apps": [],
    "hide_models": [],
    "order_with_respect_to": [
        "core", "core.Product", "core.Category", "auth", "auth.User"
    ],

    # Кастомные иконки для основных моделей (можно менять)
    "icons": {
        "core": "fas fa-fire",
        "core.Product": "fas fa-cube",
        "core.Category": "fas fa-layer-group",
        "auth": "fas fa-users-cog",
        "auth.User": "fas fa-user",
        "auth.Group": "fas fa-users",
    },
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",

    # UI tweaks
    "use_google_fonts_cdn": True,
    "show_ui_builder": False,
    "changeform_format": "horizontal_tabs",
}
